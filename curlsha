#!/bin/sh
# curlsha

VERSION='1.0.0'

curlsha_main() {
	trap _exit INT TERM

	e_args=16
	e_missing_app=17

	_require realpath

	scriptinv="$( basename "$0" )"
	scriptpath="$( realpath "$0" )"
	scriptname="$( basename "$scriptpath" )"

	while getopts hv opt
	do
		case $opt in
			h) cmd=help ;;
			v) cmd=version ;;
			*) _invalid_opt ;;
		esac
	done

	shift "$(( OPTIND - 1 ))"

	[ $# -lt 1 ] && [ -z "$cmd" ] && cmd="help"
	[ -z "$cmd" ] && cmd="process"

	case "$cmd" in
		help|process|version) "curlsha_$cmd" "$@" ;;
		*) _invalid_cmd ;;
	esac

	_exit
}

curlsha_help() {
cat <<USAGE
$scriptname $VERSION

Usage: $scriptinv [-hv] <url> [<curl options>]

Get the SHA-256 checksum of a file from a URL.

Options:

	-h        Show this help screen.
	-v        Show script name and version number.

USAGE
}

curlsha_process() {
	_require curl
	url="$1"
	shift
	curl -sSL "$url" "$@" | shasum -a 256 | tail -1 | cut -d ' ' -f 1
}

curlsha_version() {
	_echo "$scriptname $VERSION"
}

_echo() {
	echo "$@"
}

_error() {
	_echo "$@" >&2
}

_exit() {
	exit_code=$?
	exit $exit_code
}

_fatal() {
	exit_code="$1"
	shift
	_error "$@"
	exit "$exit_code"
}

_invalid_cmd() {
	_error "Invalid command: $cmd"
	_echo
	curlsha_help
	exit $e_args
}

_invalid_opt() {
	_error "Invalid option: $opt"
	_echo
	curlsha_help
	exit $e_args
}

_require() {
	missing_bin=0

	for bin in "$@"
	do
		if ! which "$bin" > /dev/null 2>&1
		then
			missing_bin=1
			_error "Required: $bin"
		fi
	done

	if [ $missing_bin -ne 0 ]
	then
		_fatal $e_missing_app "One or more executables or apps are missing."
	fi
}

curlsha_main "$@"
